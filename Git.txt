///deletar branch
git --delete <branch>
git -d <branch>
//deletar branch no repositorio remoto
git push origin --delete <branch>



//adicionar origin
git remote add origin <url>

//listar branch
git branch -a/--all mostra todas as branchs inclusive as da nuv

//adiciona uma branch local de uma branch remota
git checkout -b local_name remote/remote_branch


//deletar branch remota
git remote rm origin

//set upstream
//--set-upstream origin master

///staging area
/adicionar a staging area
git add .
//remover da staging area
/git restore --staged *

///pull
pull sem fazer merge, ou seja, empurra o commit local para ultimo
git pull --rebase

///commit
//Deletar ultimo commit ainda não lançado no rep remoto
git reset <id do commit que deseja voltar>


///amend emendar
simplesmente emenda o commit com arquivos na stagging area e/ou
altera o nome do commit
git commit --amend

///log dos commits deletados e/ou todas alterações
git reflog

///Trazer para a branch um commit específico
git cherry-pick <commid id>
git cherry-pick -n <commid id>
-n para nao fazer commit

///VEr quais arquivos foram mudados em 1 commit
git diff-tree -r <commit>


///reset
git reset <commid id ou HEAD>
git reset --soft mantem staging area e working tree. Mudanças vao p/
working tree

hard apaga staging area e working tree e as mudanças

mixed apaga staging area. Mudanças vao p/
working tree


///limpar working tree
git clean -i
-i remove de forma interativa
-n mostra os arquivos a deletar
--force força
-q remove quieto


///git tag
git tag <nome da tag> <commit> -m "descrição"
git checkout <tag>
git push <remote> <tag>
git push <remote> --tags (todas as tags)
git pull --tags


///arquivos muito grandes
baixar git lfs
ir no git bash e instalar git lfs install
git lfs track <arquivo>
um arquivo oculto vai ser gerado .gitattributes

///hooks
//configurar para um rep
git config core.hookspath <path>
//configurar global
git config --global core.hookspath <path>


///git config
system = configura para todos os usuarios do sistema
global = configura para o usuário específico
local = apenas para aquele repositório

///git alias
git config --local alias.command 'log --oneline'

//lista de alias
git config --get-regexp ^alias

///usuario
git config user.name 'username'
git config user.email 'email'